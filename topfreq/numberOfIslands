class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if not grid:
            return 0
        countIsland = 0
        for row in range(len(grid)):
            for col in range(len(grid[0])):
                if grid[row][col] == '1':
                    self.dfs(grid, row, col)
                    countIsland += 1
        return countIsland
    
    def dfs(self, grid, row, col):
        if row < 0 or col <0 or row >= len(grid) or col >=len(grid[0]) or grid[row][col] != '1':
            return
        grid[row][col] = '-1'
        self.dfs(grid, row+1, col)
        self.dfs(grid, row-1, col)
        self.dfs(grid, row, col+1)
        self.dfs(grid, row, col-1)
                    
                    
 """
 
 
 TIME And Space: O(MN), M = no of rows and N = no of colms
 
 
 """
