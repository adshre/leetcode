class Solution:
    def kthFactor(self, n: int, k: int) -> int:
        # for i in range(1, n+1):
        #     if n % i == 0:
        #         k -= 1
        #     if k == 0:
        #         return i
        # return -1
    
        divisors, sqrt_n = [], int(n**0.5)
        for x in range(1, sqrt_n + 1):
            if n % x == 0:
                k -= 1
                divisors.append(x)
                if k == 0:
                    return x
        if (sqrt_n * sqrt_n == n):
            k += 1
        n_div = len(divisors)
        return n // divisors[n_div - k] if k<= n_div else -1

"""
Time Complexity: 
O(sqrt N)

Space Complexity: 

O(min(k, sqrt N)  to store the list of divisors. 
"""
