class Solution:
    def trap(self, height: List[int]) -> int:
        ans = 0
        leftPointer = 0
        rightPointer = len(height) - 1
        maxLeft = 0
        maxRight = 0
        while leftPointer < rightPointer:
            if height[leftPointer] < height[rightPointer]:
                if height[leftPointer] > maxLeft:
                    maxLeft = height[leftPointer] 
                else:
                    ans += maxLeft - height[leftPointer]
                leftPointer += 1
            else:
                if height[rightPointer] > maxRight:
                    maxRight = height[rightPointer] 
                else:
                    ans += maxRight - height[rightPointer]
                rightPointer -= 1
        return ans
    
    """
    TIME COMPLEXITY : O(N)
    SPACE COMPLEXITY : O(1)
    """
        
